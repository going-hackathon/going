spring:
  profiles:
    active: local # default
    group:
      local:
        - common
      prod:
        - common

---

spring:
  config:
    activate:
      on-profile: common
  jpa:
    properties:
      hibernate:
        default_batch_fetch_size: 1000
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB

jwt:
  secret-key: ${JWT_KEY}
  token:
    expired-time-ms: 2592000000

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    s3:
      bucket: ${S3_BUCKET_NAME}
    region:
      static: ap-northeast-2
    stack:
      auto: false

papago:
  client:
    id: ${PAPAGO_CLIENT_ID}
    SECRET: ${PAPAGO_CLIENT_SECRET}

---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/going
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  redis:
    host: localhost
    port: 6379
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        format_sql: true
    open-in-view: false
    defer-datasource-initialization: true
  sql:
    init:
      mode: always

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/going
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  redis:
    host: localhost
    port: 6379
  jpa:
    hibernate:
      #      ddl-auto: create
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        format_sql: true
    open-in-view: false
    defer-datasource-initialization: true